/*
 * generated by Xtext 2.10.0
 */
package esir3.im.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import twitterModel2.Program
import java.io.File
import twitterModel2.Statement
import twitterModel2.*

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class TwGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
//		fsa.generateFile('greetings.txt', 'People to greet: ' + 
//			resource.allContents
//				.filter(typeof(Greeting))
//				.map[name]
//				.join(', '))

	var File file = new File(resource.URI.toString);
		var String name = file.name;
	var String output = "";

		for (p : resource.allContents.toIterable.filter(Program)) {
			output +="/*start program*/ \n import esir3.im.libs.*; \n"+ p.compile + '\n } \n } /*end program*/'
		}
		fsa.generateFile(name + ".java", output)
	
	}
	/*def Visiteur getVisiteurCodeJava(){
		return new VisiteurCodeJava(new TabSymbole());
	}*/
	def compile(Program p) {
		var VisiteurCodeJava v = new VisiteurCodeJava(new TabSymbole());
		var String res = p.accepteVisiteur(v)+"\n";
		for(Statement st : p.statement){
			res+=st.accepteVisiteur(v)+"\n";
		}
		v.tabSymbole.afficher;
		return res;
	}
}
