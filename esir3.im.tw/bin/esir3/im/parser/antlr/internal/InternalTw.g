/*
 * generated by Xtext 2.10.0
 */
grammar InternalTw;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package esir3.im.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package esir3.im.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import esir3.im.services.TwGrammarAccess;

}

@parser::members {

 	private TwGrammarAccess grammarAccess;

    public InternalTwParser(TokenStream input, TwGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected TwGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getProgramAccess().getProgramAction_0(),
					$current);
			}
		)
		otherlv_1='Program'
		{
			newLeafNode(otherlv_1, grammarAccess.getProgramAccess().getProgramKeyword_1());
		}
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_3_0_0());
					}
					lv_statement_3_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProgramRule());
						}
						add(
							$current,
							"statement",
							lv_statement_3_0,
							"esir3.im.Tw.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=';'
				{
					newLeafNode(otherlv_4, grammarAccess.getProgramAccess().getSemicolonKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProgramAccess().getStatementStatementParserRuleCall_3_1_1_0());
						}
						lv_statement_5_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProgramRule());
							}
							add(
								$current,
								"statement",
								lv_statement_5_0,
								"esir3.im.Tw.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleStatement
entryRuleStatement returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStatementRule()); }
	iv_ruleStatement=ruleStatement
	{ $current=$iv_ruleStatement.current; }
	EOF;

// Rule Statement
ruleStatement returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStatementAccess().getBlockParserRuleCall_0());
		}
		this_Block_0=ruleBlock
		{
			$current = $this_Block_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getIfParserRuleCall_1());
		}
		this_If_1=ruleIf
		{
			$current = $this_If_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getDeclarationVarParserRuleCall_2());
		}
		this_DeclarationVar_2=ruleDeclarationVar
		{
			$current = $this_DeclarationVar_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getANDParserRuleCall_3());
		}
		this_AND_3=ruleAND
		{
			$current = $this_AND_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getORParserRuleCall_4());
		}
		this_OR_4=ruleOR
		{
			$current = $this_OR_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getTweets_userParserRuleCall_5());
		}
		this_tweets_user_5=ruletweets_user
		{
			$current = $this_tweets_user_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getTweets_locationParserRuleCall_6());
		}
		this_tweets_location_6=ruletweets_location
		{
			$current = $this_tweets_location_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getTweets_entityParserRuleCall_7());
		}
		this_tweets_entity_7=ruletweets_entity
		{
			$current = $this_tweets_entity_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getTweets_dateParserRuleCall_8());
		}
		this_tweets_date_8=ruletweets_date
		{
			$current = $this_tweets_date_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getProportionPositifParserRuleCall_9());
		}
		this_ProportionPositif_9=ruleProportionPositif
		{
			$current = $this_ProportionPositif_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getProportionNegatifParserRuleCall_10());
		}
		this_ProportionNegatif_10=ruleProportionNegatif
		{
			$current = $this_ProportionNegatif_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getCountTweetParserRuleCall_11());
		}
		this_countTweet_11=rulecountTweet
		{
			$current = $this_countTweet_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getCountVisitProfilParserRuleCall_12());
		}
		this_countVisitProfil_12=rulecountVisitProfil
		{
			$current = $this_countVisitProfil_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getCroissanceAbonneParserRuleCall_13());
		}
		this_CroissanceAbonne_13=ruleCroissanceAbonne
		{
			$current = $this_CroissanceAbonne_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getMoyFollowersParserRuleCall_14());
		}
		this_moyFollowers_14=rulemoyFollowers
		{
			$current = $this_moyFollowers_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getMoyFavoritedParserRuleCall_15());
		}
		this_moyFavorited_15=rulemoyFavorited
		{
			$current = $this_moyFavorited_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getGREATERParserRuleCall_16());
		}
		this_GREATER_16=ruleGREATER
		{
			$current = $this_GREATER_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getLESSParserRuleCall_17());
		}
		this_LESS_17=ruleLESS
		{
			$current = $this_LESS_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getEQUALSParserRuleCall_18());
		}
		this_EQUALS_18=ruleEQUALS
		{
			$current = $this_EQUALS_18.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getUtilisationVarParserRuleCall_19());
		}
		this_UtilisationVar_19=ruleUtilisationVar
		{
			$current = $this_UtilisationVar_19.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getPrintParserRuleCall_20());
		}
		this_print_20=ruleprint
		{
			$current = $this_print_20.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getStringTwParserRuleCall_21());
		}
		this_StringTw_21=ruleStringTw
		{
			$current = $this_StringTw_21.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getADDParserRuleCall_22());
		}
		this_ADD_22=ruleADD
		{
			$current = $this_ADD_22.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStatementAccess().getMULParserRuleCall_23());
		}
		this_MUL_23=ruleMUL
		{
			$current = $this_MUL_23.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOpBool
entryRuleOpBool returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOpBoolRule()); }
	iv_ruleOpBool=ruleOpBool
	{ $current=$iv_ruleOpBool.current; }
	EOF;

// Rule OpBool
ruleOpBool returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getOpBoolAccess().getANDParserRuleCall_0());
		}
		this_AND_0=ruleAND
		{
			$current = $this_AND_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOpBoolAccess().getORParserRuleCall_1());
		}
		this_OR_1=ruleOR
		{
			$current = $this_OR_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOpBoolAccess().getGREATERParserRuleCall_2());
		}
		this_GREATER_2=ruleGREATER
		{
			$current = $this_GREATER_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOpBoolAccess().getLESSParserRuleCall_3());
		}
		this_LESS_3=ruleLESS
		{
			$current = $this_LESS_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getOpBoolAccess().getEQUALSParserRuleCall_4());
		}
		this_EQUALS_4=ruleEQUALS
		{
			$current = $this_EQUALS_4.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	iv_ruleExpression=ruleExpression
	{ $current=$iv_ruleExpression.current; }
	EOF;

// Rule Expression
ruleExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getANDParserRuleCall_0());
		}
		this_AND_0=ruleAND
		{
			$current = $this_AND_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getORParserRuleCall_1());
		}
		this_OR_1=ruleOR
		{
			$current = $this_OR_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getTweets_userParserRuleCall_2());
		}
		this_tweets_user_2=ruletweets_user
		{
			$current = $this_tweets_user_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getTweets_locationParserRuleCall_3());
		}
		this_tweets_location_3=ruletweets_location
		{
			$current = $this_tweets_location_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getTweets_entityParserRuleCall_4());
		}
		this_tweets_entity_4=ruletweets_entity
		{
			$current = $this_tweets_entity_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getTweets_dateParserRuleCall_5());
		}
		this_tweets_date_5=ruletweets_date
		{
			$current = $this_tweets_date_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getProportionPositifParserRuleCall_6());
		}
		this_ProportionPositif_6=ruleProportionPositif
		{
			$current = $this_ProportionPositif_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getProportionNegatifParserRuleCall_7());
		}
		this_ProportionNegatif_7=ruleProportionNegatif
		{
			$current = $this_ProportionNegatif_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getCountTweetParserRuleCall_8());
		}
		this_countTweet_8=rulecountTweet
		{
			$current = $this_countTweet_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getCountVisitProfilParserRuleCall_9());
		}
		this_countVisitProfil_9=rulecountVisitProfil
		{
			$current = $this_countVisitProfil_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getCroissanceAbonneParserRuleCall_10());
		}
		this_CroissanceAbonne_10=ruleCroissanceAbonne
		{
			$current = $this_CroissanceAbonne_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getMoyFollowersParserRuleCall_11());
		}
		this_moyFollowers_11=rulemoyFollowers
		{
			$current = $this_moyFollowers_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getMoyFavoritedParserRuleCall_12());
		}
		this_moyFavorited_12=rulemoyFavorited
		{
			$current = $this_moyFavorited_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getGREATERParserRuleCall_13());
		}
		this_GREATER_13=ruleGREATER
		{
			$current = $this_GREATER_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getLESSParserRuleCall_14());
		}
		this_LESS_14=ruleLESS
		{
			$current = $this_LESS_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getEQUALSParserRuleCall_15());
		}
		this_EQUALS_15=ruleEQUALS
		{
			$current = $this_EQUALS_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getUtilisationVarParserRuleCall_16());
		}
		this_UtilisationVar_16=ruleUtilisationVar
		{
			$current = $this_UtilisationVar_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getStringTwParserRuleCall_17());
		}
		this_StringTw_17=ruleStringTw
		{
			$current = $this_StringTw_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getADDParserRuleCall_18());
		}
		this_ADD_18=ruleADD
		{
			$current = $this_ADD_18.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getExpressionAccess().getMULParserRuleCall_19());
		}
		this_MUL_19=ruleMUL
		{
			$current = $this_MUL_19.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleBlock
entryRuleBlock returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlockRule()); }
	iv_ruleBlock=ruleBlock
	{ $current=$iv_ruleBlock.current; }
	EOF;

// Rule Block
ruleBlock returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getBlockAccess().getBlockAction_0(),
					$current);
			}
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getBlockAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_2_0_0());
					}
					lv_statement_2_0=ruleStatement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlockRule());
						}
						add(
							$current,
							"statement",
							lv_statement_2_0,
							"esir3.im.Tw.Statement");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=';'
				{
					newLeafNode(otherlv_3, grammarAccess.getBlockAccess().getSemicolonKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_2_1_1_0());
						}
						lv_statement_4_0=ruleStatement
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getBlockRule());
							}
							add(
								$current,
								"statement",
								lv_statement_4_0,
								"esir3.im.Tw.Statement");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getBlockAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleIf
entryRuleIf returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIfRule()); }
	iv_ruleIf=ruleIf
	{ $current=$iv_ruleIf.current; }
	EOF;

// Rule If
ruleIf returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='If'
		{
			newLeafNode(otherlv_0, grammarAccess.getIfAccess().getIfKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIfAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getConditionOpBoolParserRuleCall_2_0());
				}
				lv_condition_2_0=ruleOpBool
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"condition",
						lv_condition_2_0,
						"esir3.im.Tw.OpBool");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getIfAccess().getRightParenthesisKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIfAccess().getIfBlockBlockParserRuleCall_4_0());
				}
				lv_ifBlock_4_0=ruleBlock
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIfRule());
					}
					set(
						$current,
						"ifBlock",
						lv_ifBlock_4_0,
						"esir3.im.Tw.Block");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_5='else'
			{
				newLeafNode(otherlv_5, grammarAccess.getIfAccess().getElseKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIfAccess().getElseBlockBlockParserRuleCall_5_1_0());
					}
					lv_elseBlock_6_0=ruleBlock
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIfRule());
						}
						set(
							$current,
							"elseBlock",
							lv_elseBlock_6_0,
							"esir3.im.Tw.Block");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleDeclarationVar
entryRuleDeclarationVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDeclarationVarRule()); }
	iv_ruleDeclarationVar=ruleDeclarationVar
	{ $current=$iv_ruleDeclarationVar.current; }
	EOF;

// Rule DeclarationVar
ruleDeclarationVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationVarAccess().getNameString0ParserRuleCall_0_0());
				}
				lv_name_0_0=ruleString0
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationVarRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"esir3.im.Tw.String0");
					afterParserOrEnumRuleCall();
				}
			)
		)?
		otherlv_1=':='
		{
			newLeafNode(otherlv_1, grammarAccess.getDeclarationVarAccess().getColonEqualsSignKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getDeclarationVarAccess().getOpDroiteExpressionParserRuleCall_2_0());
				}
				lv_opDroite_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDeclarationVarRule());
					}
					set(
						$current,
						"opDroite",
						lv_opDroite_2_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAND
entryRuleAND returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getANDRule()); }
	iv_ruleAND=ruleAND
	{ $current=$iv_ruleAND.current; }
	EOF;

// Rule AND
ruleAND returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='AND'
		{
			newLeafNode(otherlv_0, grammarAccess.getANDAccess().getANDKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getANDAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getANDAccess().getExp1ExpressionParserRuleCall_2_0());
				}
				lv_exp1_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getANDRule());
					}
					set(
						$current,
						"exp1",
						lv_exp1_2_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getANDAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getANDAccess().getExp2ExpressionParserRuleCall_4_0());
				}
				lv_exp2_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getANDRule());
					}
					set(
						$current,
						"exp2",
						lv_exp2_4_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getANDAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleOR
entryRuleOR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getORRule()); }
	iv_ruleOR=ruleOR
	{ $current=$iv_ruleOR.current; }
	EOF;

// Rule OR
ruleOR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='OR'
		{
			newLeafNode(otherlv_0, grammarAccess.getORAccess().getORKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getORAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getORAccess().getExp1ExpressionParserRuleCall_2_0());
				}
				lv_exp1_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getORRule());
					}
					set(
						$current,
						"exp1",
						lv_exp1_2_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getORAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getORAccess().getExp2ExpressionParserRuleCall_4_0());
				}
				lv_exp2_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getORRule());
					}
					set(
						$current,
						"exp2",
						lv_exp2_4_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getORAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuletweets_user
entryRuletweets_user returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTweets_userRule()); }
	iv_ruletweets_user=ruletweets_user
	{ $current=$iv_ruletweets_user.current; }
	EOF;

// Rule tweets_user
ruletweets_user returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='tweets_user'
		{
			newLeafNode(otherlv_0, grammarAccess.getTweets_userAccess().getTweets_userKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTweets_userAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTweets_userAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTweets_userRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getTweets_userAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTweets_userAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTweets_userRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTweets_userAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuletweets_location
entryRuletweets_location returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTweets_locationRule()); }
	iv_ruletweets_location=ruletweets_location
	{ $current=$iv_ruletweets_location.current; }
	EOF;

// Rule tweets_location
ruletweets_location returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='tweets_location'
		{
			newLeafNode(otherlv_0, grammarAccess.getTweets_locationAccess().getTweets_locationKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTweets_locationAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTweets_locationAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTweets_locationRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getTweets_locationAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTweets_locationAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTweets_locationRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTweets_locationAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuletweets_entity
entryRuletweets_entity returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTweets_entityRule()); }
	iv_ruletweets_entity=ruletweets_entity
	{ $current=$iv_ruletweets_entity.current; }
	EOF;

// Rule tweets_entity
ruletweets_entity returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='tweets_entity'
		{
			newLeafNode(otherlv_0, grammarAccess.getTweets_entityAccess().getTweets_entityKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTweets_entityAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTweets_entityAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTweets_entityRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getTweets_entityAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTweets_entityAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTweets_entityRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTweets_entityAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuletweets_date
entryRuletweets_date returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTweets_dateRule()); }
	iv_ruletweets_date=ruletweets_date
	{ $current=$iv_ruletweets_date.current; }
	EOF;

// Rule tweets_date
ruletweets_date returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='tweets_date'
		{
			newLeafNode(otherlv_0, grammarAccess.getTweets_dateAccess().getTweets_dateKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getTweets_dateAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTweets_dateAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTweets_dateRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getTweets_dateAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTweets_dateAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTweets_dateRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getTweets_dateAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleProportionPositif
entryRuleProportionPositif returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProportionPositifRule()); }
	iv_ruleProportionPositif=ruleProportionPositif
	{ $current=$iv_ruleProportionPositif.current; }
	EOF;

// Rule ProportionPositif
ruleProportionPositif returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ProportionPositif'
		{
			newLeafNode(otherlv_0, grammarAccess.getProportionPositifAccess().getProportionPositifKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getProportionPositifAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProportionPositifAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProportionPositifRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getProportionPositifAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProportionPositifAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProportionPositifRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getProportionPositifAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleProportionNegatif
entryRuleProportionNegatif returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProportionNegatifRule()); }
	iv_ruleProportionNegatif=ruleProportionNegatif
	{ $current=$iv_ruleProportionNegatif.current; }
	EOF;

// Rule ProportionNegatif
ruleProportionNegatif returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ProportionNegatif'
		{
			newLeafNode(otherlv_0, grammarAccess.getProportionNegatifAccess().getProportionNegatifKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getProportionNegatifAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getProportionNegatifAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getProportionNegatifRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getProportionNegatifAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getProportionNegatifAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getProportionNegatifRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getProportionNegatifAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRulecountTweet
entryRulecountTweet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountTweetRule()); }
	iv_rulecountTweet=rulecountTweet
	{ $current=$iv_rulecountTweet.current; }
	EOF;

// Rule countTweet
rulecountTweet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='countTweet'
		{
			newLeafNode(otherlv_0, grammarAccess.getCountTweetAccess().getCountTweetKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCountTweetAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCountTweetAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCountTweetRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getCountTweetAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCountTweetAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCountTweetRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCountTweetAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRulecountVisitProfil
entryRulecountVisitProfil returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountVisitProfilRule()); }
	iv_rulecountVisitProfil=rulecountVisitProfil
	{ $current=$iv_rulecountVisitProfil.current; }
	EOF;

// Rule countVisitProfil
rulecountVisitProfil returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='countVisitProfil'
		{
			newLeafNode(otherlv_0, grammarAccess.getCountVisitProfilAccess().getCountVisitProfilKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCountVisitProfilAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCountVisitProfilAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCountVisitProfilRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getCountVisitProfilAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCountVisitProfilAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCountVisitProfilRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCountVisitProfilAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleCroissanceAbonne
entryRuleCroissanceAbonne returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCroissanceAbonneRule()); }
	iv_ruleCroissanceAbonne=ruleCroissanceAbonne
	{ $current=$iv_ruleCroissanceAbonne.current; }
	EOF;

// Rule CroissanceAbonne
ruleCroissanceAbonne returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='CroissanceAbonne'
		{
			newLeafNode(otherlv_0, grammarAccess.getCroissanceAbonneAccess().getCroissanceAbonneKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getCroissanceAbonneAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCroissanceAbonneAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCroissanceAbonneRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getCroissanceAbonneAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCroissanceAbonneAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCroissanceAbonneRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getCroissanceAbonneAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRulemoyFollowers
entryRulemoyFollowers returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoyFollowersRule()); }
	iv_rulemoyFollowers=rulemoyFollowers
	{ $current=$iv_rulemoyFollowers.current; }
	EOF;

// Rule moyFollowers
rulemoyFollowers returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='moyFollowers'
		{
			newLeafNode(otherlv_0, grammarAccess.getMoyFollowersAccess().getMoyFollowersKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMoyFollowersAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMoyFollowersAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMoyFollowersRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getMoyFollowersAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMoyFollowersAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMoyFollowersRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMoyFollowersAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRulemoyFavorited
entryRulemoyFavorited returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMoyFavoritedRule()); }
	iv_rulemoyFavorited=rulemoyFavorited
	{ $current=$iv_rulemoyFavorited.current; }
	EOF;

// Rule moyFavorited
rulemoyFavorited returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='moyFavorited'
		{
			newLeafNode(otherlv_0, grammarAccess.getMoyFavoritedAccess().getMoyFavoritedKeyword_0());
		}
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getMoyFavoritedAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMoyFavoritedAccess().getArgsUtilisationVarParserRuleCall_2_0_0());
					}
					lv_args_2_0=ruleUtilisationVar
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMoyFavoritedRule());
						}
						add(
							$current,
							"args",
							lv_args_2_0,
							"esir3.im.Tw.UtilisationVar");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_3=','
				{
					newLeafNode(otherlv_3, grammarAccess.getMoyFavoritedAccess().getCommaKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMoyFavoritedAccess().getArgsUtilisationVarParserRuleCall_2_1_1_0());
						}
						lv_args_4_0=ruleUtilisationVar
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMoyFavoritedRule());
							}
							add(
								$current,
								"args",
								lv_args_4_0,
								"esir3.im.Tw.UtilisationVar");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getMoyFavoritedAccess().getRightCurlyBracketKeyword_3());
		}
	)
;

// Entry rule entryRuleGREATER
entryRuleGREATER returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGREATERRule()); }
	iv_ruleGREATER=ruleGREATER
	{ $current=$iv_ruleGREATER.current; }
	EOF;

// Rule GREATER
ruleGREATER returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='GREATER'
		{
			newLeafNode(otherlv_0, grammarAccess.getGREATERAccess().getGREATERKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getGREATERAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGREATERAccess().getExp1ExpressionParserRuleCall_2_0());
				}
				lv_exp1_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGREATERRule());
					}
					set(
						$current,
						"exp1",
						lv_exp1_2_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getGREATERAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getGREATERAccess().getExp2ExpressionParserRuleCall_4_0());
				}
				lv_exp2_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getGREATERRule());
					}
					set(
						$current,
						"exp2",
						lv_exp2_4_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getGREATERAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleLESS
entryRuleLESS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLESSRule()); }
	iv_ruleLESS=ruleLESS
	{ $current=$iv_ruleLESS.current; }
	EOF;

// Rule LESS
ruleLESS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='LESS'
		{
			newLeafNode(otherlv_0, grammarAccess.getLESSAccess().getLESSKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLESSAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLESSAccess().getExp1ExpressionParserRuleCall_2_0());
				}
				lv_exp1_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLESSRule());
					}
					set(
						$current,
						"exp1",
						lv_exp1_2_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getLESSAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLESSAccess().getExp2ExpressionParserRuleCall_4_0());
				}
				lv_exp2_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLESSRule());
					}
					set(
						$current,
						"exp2",
						lv_exp2_4_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getLESSAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleEQUALS
entryRuleEQUALS returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEQUALSRule()); }
	iv_ruleEQUALS=ruleEQUALS
	{ $current=$iv_ruleEQUALS.current; }
	EOF;

// Rule EQUALS
ruleEQUALS returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='EQUALS'
		{
			newLeafNode(otherlv_0, grammarAccess.getEQUALSAccess().getEQUALSKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getEQUALSAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEQUALSAccess().getExp1ExpressionParserRuleCall_2_0());
				}
				lv_exp1_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEQUALSRule());
					}
					set(
						$current,
						"exp1",
						lv_exp1_2_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getEQUALSAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getEQUALSAccess().getExp2ExpressionParserRuleCall_4_0());
				}
				lv_exp2_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getEQUALSRule());
					}
					set(
						$current,
						"exp2",
						lv_exp2_4_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getEQUALSAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleUtilisationVar
entryRuleUtilisationVar returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getUtilisationVarRule()); }
	iv_ruleUtilisationVar=ruleUtilisationVar
	{ $current=$iv_ruleUtilisationVar.current; }
	EOF;

// Rule UtilisationVar
ruleUtilisationVar returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getUtilisationVarRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getUtilisationVarAccess().getNameVarDeclarationVarCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleprint
entryRuleprint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrintRule()); }
	iv_ruleprint=ruleprint
	{ $current=$iv_ruleprint.current; }
	EOF;

// Rule print
ruleprint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='print'
		{
			newLeafNode(otherlv_0, grammarAccess.getPrintAccess().getPrintKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getPrintAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPrintAccess().getExpressionExpressionParserRuleCall_2_0());
				}
				lv_expression_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPrintRule());
					}
					set(
						$current,
						"expression",
						lv_expression_2_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getPrintAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRuleStringTw
entryRuleStringTw returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringTwRule()); }
	iv_ruleStringTw=ruleStringTw
	{ $current=$iv_ruleStringTw.current; }
	EOF;

// Rule StringTw
ruleStringTw returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_stringTw_0_0=RULE_STRING
			{
				newLeafNode(lv_stringTw_0_0, grammarAccess.getStringTwAccess().getStringTwSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getStringTwRule());
				}
				setWithLastConsumed(
					$current,
					"stringTw",
					lv_stringTw_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleADD
entryRuleADD returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getADDRule()); }
	iv_ruleADD=ruleADD
	{ $current=$iv_ruleADD.current; }
	EOF;

// Rule ADD
ruleADD returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ADD'
		{
			newLeafNode(otherlv_0, grammarAccess.getADDAccess().getADDKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getADDAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getADDAccess().getExp1ExpressionParserRuleCall_2_0());
				}
				lv_exp1_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getADDRule());
					}
					set(
						$current,
						"exp1",
						lv_exp1_2_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getADDAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getADDAccess().getExp2ExpressionParserRuleCall_4_0());
				}
				lv_exp2_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getADDRule());
					}
					set(
						$current,
						"exp2",
						lv_exp2_4_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getADDAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleMUL
entryRuleMUL returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMULRule()); }
	iv_ruleMUL=ruleMUL
	{ $current=$iv_ruleMUL.current; }
	EOF;

// Rule MUL
ruleMUL returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='MUL'
		{
			newLeafNode(otherlv_0, grammarAccess.getMULAccess().getMULKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getMULAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMULAccess().getExp1ExpressionParserRuleCall_2_0());
				}
				lv_exp1_2_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMULRule());
					}
					set(
						$current,
						"exp1",
						lv_exp1_2_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getMULAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getMULAccess().getExp2ExpressionParserRuleCall_4_0());
				}
				lv_exp2_4_0=ruleExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMULRule());
					}
					set(
						$current,
						"exp2",
						lv_exp2_4_0,
						"esir3.im.Tw.Expression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=')'
		{
			newLeafNode(otherlv_5, grammarAccess.getMULAccess().getRightParenthesisKeyword_5());
		}
	)
;

// Entry rule entryRuleString0
entryRuleString0 returns [String current=null]:
	{ newCompositeNode(grammarAccess.getString0Rule()); }
	iv_ruleString0=ruleString0
	{ $current=$iv_ruleString0.current.getText(); }
	EOF;

// Rule String0
ruleString0 returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	this_ID_0=RULE_ID
	{
		$current.merge(this_ID_0);
	}
	{
		newLeafNode(this_ID_0, grammarAccess.getString0Access().getIDTerminalRuleCall());
	}
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
