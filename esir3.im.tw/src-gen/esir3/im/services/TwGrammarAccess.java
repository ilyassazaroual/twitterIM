/*
 * generated by Xtext 2.10.0
 */
package esir3.im.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder.AbstractGrammarElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class TwGrammarAccess extends AbstractGrammarElementFinder {
	
	public class ProgramElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Program");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProgramAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProgramKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cStatementKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cStatementAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cStatementStatementParserRuleCall_3_2_0 = (RuleCall)cStatementAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cStatementAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cStatementStatementParserRuleCall_3_3_1_0 = (RuleCall)cStatementAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Program:
		//	{Program}
		//	'Program'
		//	'{' ('statement' '{' statement+=Statement ("," statement+=Statement)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Program} 'Program' '{' ('statement' '{' statement+=Statement ("," statement+=Statement)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Program}
		public Action getProgramAction_0() { return cProgramAction_0; }
		
		//'Program'
		public Keyword getProgramKeyword_1() { return cProgramKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('statement' '{' statement+=Statement ("," statement+=Statement)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'statement'
		public Keyword getStatementKeyword_3_0() { return cStatementKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//statement+=Statement
		public Assignment getStatementAssignment_3_2() { return cStatementAssignment_3_2; }
		
		//Statement
		public RuleCall getStatementStatementParserRuleCall_3_2_0() { return cStatementStatementParserRuleCall_3_2_0; }
		
		//("," statement+=Statement)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//statement+=Statement
		public Assignment getStatementAssignment_3_3_1() { return cStatementAssignment_3_3_1; }
		
		//Statement
		public RuleCall getStatementStatementParserRuleCall_3_3_1_0() { return cStatementStatementParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class StatementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Statement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBlockParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIfParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cConstParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAffectationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cAndParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cOrParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cXorParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cTweets_userParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cTweets_locationParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cTweets_entityParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cTweets_dateParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cProportionPositifParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cProportionNegatifParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cCountTweetParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cCountVisitProfilParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cCroissanceAbonneParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cMoyFollowersParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cMoyFavoritedParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cGreaterParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cLessParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		private final RuleCall cEqualParserRuleCall_20 = (RuleCall)cAlternatives.eContents().get(20);
		private final RuleCall cSupEgalParserRuleCall_21 = (RuleCall)cAlternatives.eContents().get(21);
		
		//Statement:
		//	Block | If | Const | Affectation | And | Or | Xor | tweets_user | tweets_location | tweets_entity | tweets_date |
		//	ProportionPositif | ProportionNegatif | countTweet | countVisitProfil | CroissanceAbonne | moyFollowers |
		//	moyFavorited | Greater | Less | Equal | SupEgal;
		@Override public ParserRule getRule() { return rule; }
		
		//Block | If | Const | Affectation | And | Or | Xor | tweets_user | tweets_location | tweets_entity | tweets_date |
		//ProportionPositif | ProportionNegatif | countTweet | countVisitProfil | CroissanceAbonne | moyFollowers | moyFavorited
		//| Greater | Less | Equal | SupEgal
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Block
		public RuleCall getBlockParserRuleCall_0() { return cBlockParserRuleCall_0; }
		
		//If
		public RuleCall getIfParserRuleCall_1() { return cIfParserRuleCall_1; }
		
		//Const
		public RuleCall getConstParserRuleCall_2() { return cConstParserRuleCall_2; }
		
		//Affectation
		public RuleCall getAffectationParserRuleCall_3() { return cAffectationParserRuleCall_3; }
		
		//And
		public RuleCall getAndParserRuleCall_4() { return cAndParserRuleCall_4; }
		
		//Or
		public RuleCall getOrParserRuleCall_5() { return cOrParserRuleCall_5; }
		
		//Xor
		public RuleCall getXorParserRuleCall_6() { return cXorParserRuleCall_6; }
		
		//tweets_user
		public RuleCall getTweets_userParserRuleCall_7() { return cTweets_userParserRuleCall_7; }
		
		//tweets_location
		public RuleCall getTweets_locationParserRuleCall_8() { return cTweets_locationParserRuleCall_8; }
		
		//tweets_entity
		public RuleCall getTweets_entityParserRuleCall_9() { return cTweets_entityParserRuleCall_9; }
		
		//tweets_date
		public RuleCall getTweets_dateParserRuleCall_10() { return cTweets_dateParserRuleCall_10; }
		
		//ProportionPositif
		public RuleCall getProportionPositifParserRuleCall_11() { return cProportionPositifParserRuleCall_11; }
		
		//ProportionNegatif
		public RuleCall getProportionNegatifParserRuleCall_12() { return cProportionNegatifParserRuleCall_12; }
		
		//countTweet
		public RuleCall getCountTweetParserRuleCall_13() { return cCountTweetParserRuleCall_13; }
		
		//countVisitProfil
		public RuleCall getCountVisitProfilParserRuleCall_14() { return cCountVisitProfilParserRuleCall_14; }
		
		//CroissanceAbonne
		public RuleCall getCroissanceAbonneParserRuleCall_15() { return cCroissanceAbonneParserRuleCall_15; }
		
		//moyFollowers
		public RuleCall getMoyFollowersParserRuleCall_16() { return cMoyFollowersParserRuleCall_16; }
		
		//moyFavorited
		public RuleCall getMoyFavoritedParserRuleCall_17() { return cMoyFavoritedParserRuleCall_17; }
		
		//Greater
		public RuleCall getGreaterParserRuleCall_18() { return cGreaterParserRuleCall_18; }
		
		//Less
		public RuleCall getLessParserRuleCall_19() { return cLessParserRuleCall_19; }
		
		//Equal
		public RuleCall getEqualParserRuleCall_20() { return cEqualParserRuleCall_20; }
		
		//SupEgal
		public RuleCall getSupEgalParserRuleCall_21() { return cSupEgalParserRuleCall_21; }
	}
	public class OpBoolElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.OpBool");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cAndParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cOrParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cXorParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cGreaterParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cLessParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cEqualParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cSupEgalParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		//OpBool:
		//	And | Or | Xor | Greater | Less | Equal | SupEgal;
		@Override public ParserRule getRule() { return rule; }
		
		//And | Or | Xor | Greater | Less | Equal | SupEgal
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//And
		public RuleCall getAndParserRuleCall_0() { return cAndParserRuleCall_0; }
		
		//Or
		public RuleCall getOrParserRuleCall_1() { return cOrParserRuleCall_1; }
		
		//Xor
		public RuleCall getXorParserRuleCall_2() { return cXorParserRuleCall_2; }
		
		//Greater
		public RuleCall getGreaterParserRuleCall_3() { return cGreaterParserRuleCall_3; }
		
		//Less
		public RuleCall getLessParserRuleCall_4() { return cLessParserRuleCall_4; }
		
		//Equal
		public RuleCall getEqualParserRuleCall_5() { return cEqualParserRuleCall_5; }
		
		//SupEgal
		public RuleCall getSupEgalParserRuleCall_6() { return cSupEgalParserRuleCall_6; }
	}
	public class ExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Expression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cConstParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAffectationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAndParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cOrParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cXorParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cTweets_userParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cTweets_locationParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cTweets_entityParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cTweets_dateParserRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cProportionPositifParserRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cProportionNegatifParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final RuleCall cCountTweetParserRuleCall_11 = (RuleCall)cAlternatives.eContents().get(11);
		private final RuleCall cCountVisitProfilParserRuleCall_12 = (RuleCall)cAlternatives.eContents().get(12);
		private final RuleCall cCroissanceAbonneParserRuleCall_13 = (RuleCall)cAlternatives.eContents().get(13);
		private final RuleCall cMoyFollowersParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		private final RuleCall cMoyFavoritedParserRuleCall_15 = (RuleCall)cAlternatives.eContents().get(15);
		private final RuleCall cGreaterParserRuleCall_16 = (RuleCall)cAlternatives.eContents().get(16);
		private final RuleCall cLessParserRuleCall_17 = (RuleCall)cAlternatives.eContents().get(17);
		private final RuleCall cEqualParserRuleCall_18 = (RuleCall)cAlternatives.eContents().get(18);
		private final RuleCall cSupEgalParserRuleCall_19 = (RuleCall)cAlternatives.eContents().get(19);
		
		//Expression:
		//	Const | Affectation | And | Or | Xor | tweets_user | tweets_location | tweets_entity | tweets_date |
		//	ProportionPositif | ProportionNegatif | countTweet | countVisitProfil | CroissanceAbonne | moyFollowers |
		//	moyFavorited | Greater | Less | Equal | SupEgal;
		@Override public ParserRule getRule() { return rule; }
		
		//Const | Affectation | And | Or | Xor | tweets_user | tweets_location | tweets_entity | tweets_date | ProportionPositif |
		//ProportionNegatif | countTweet | countVisitProfil | CroissanceAbonne | moyFollowers | moyFavorited | Greater | Less |
		//Equal | SupEgal
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Const
		public RuleCall getConstParserRuleCall_0() { return cConstParserRuleCall_0; }
		
		//Affectation
		public RuleCall getAffectationParserRuleCall_1() { return cAffectationParserRuleCall_1; }
		
		//And
		public RuleCall getAndParserRuleCall_2() { return cAndParserRuleCall_2; }
		
		//Or
		public RuleCall getOrParserRuleCall_3() { return cOrParserRuleCall_3; }
		
		//Xor
		public RuleCall getXorParserRuleCall_4() { return cXorParserRuleCall_4; }
		
		//tweets_user
		public RuleCall getTweets_userParserRuleCall_5() { return cTweets_userParserRuleCall_5; }
		
		//tweets_location
		public RuleCall getTweets_locationParserRuleCall_6() { return cTweets_locationParserRuleCall_6; }
		
		//tweets_entity
		public RuleCall getTweets_entityParserRuleCall_7() { return cTweets_entityParserRuleCall_7; }
		
		//tweets_date
		public RuleCall getTweets_dateParserRuleCall_8() { return cTweets_dateParserRuleCall_8; }
		
		//ProportionPositif
		public RuleCall getProportionPositifParserRuleCall_9() { return cProportionPositifParserRuleCall_9; }
		
		//ProportionNegatif
		public RuleCall getProportionNegatifParserRuleCall_10() { return cProportionNegatifParserRuleCall_10; }
		
		//countTweet
		public RuleCall getCountTweetParserRuleCall_11() { return cCountTweetParserRuleCall_11; }
		
		//countVisitProfil
		public RuleCall getCountVisitProfilParserRuleCall_12() { return cCountVisitProfilParserRuleCall_12; }
		
		//CroissanceAbonne
		public RuleCall getCroissanceAbonneParserRuleCall_13() { return cCroissanceAbonneParserRuleCall_13; }
		
		//moyFollowers
		public RuleCall getMoyFollowersParserRuleCall_14() { return cMoyFollowersParserRuleCall_14; }
		
		//moyFavorited
		public RuleCall getMoyFavoritedParserRuleCall_15() { return cMoyFavoritedParserRuleCall_15; }
		
		//Greater
		public RuleCall getGreaterParserRuleCall_16() { return cGreaterParserRuleCall_16; }
		
		//Less
		public RuleCall getLessParserRuleCall_17() { return cLessParserRuleCall_17; }
		
		//Equal
		public RuleCall getEqualParserRuleCall_18() { return cEqualParserRuleCall_18; }
		
		//SupEgal
		public RuleCall getSupEgalParserRuleCall_19() { return cSupEgalParserRuleCall_19; }
	}
	public class BlockElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Block");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cBlockAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBlockKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cStatementKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cStatementAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cStatementStatementParserRuleCall_3_2_0 = (RuleCall)cStatementAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cStatementAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cStatementStatementParserRuleCall_3_3_1_0 = (RuleCall)cStatementAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Block:
		//	{Block}
		//	'Block'
		//	'{' ('statement' '{' statement+=Statement ("," statement+=Statement)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Block} 'Block' '{' ('statement' '{' statement+=Statement ("," statement+=Statement)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{Block}
		public Action getBlockAction_0() { return cBlockAction_0; }
		
		//'Block'
		public Keyword getBlockKeyword_1() { return cBlockKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('statement' '{' statement+=Statement ("," statement+=Statement)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'statement'
		public Keyword getStatementKeyword_3_0() { return cStatementKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//statement+=Statement
		public Assignment getStatementAssignment_3_2() { return cStatementAssignment_3_2; }
		
		//Statement
		public RuleCall getStatementStatementParserRuleCall_3_2_0() { return cStatementStatementParserRuleCall_3_2_0; }
		
		//("," statement+=Statement)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//statement+=Statement
		public Assignment getStatementAssignment_3_3_1() { return cStatementAssignment_3_3_1; }
		
		//Statement
		public RuleCall getStatementStatementParserRuleCall_3_3_1_0() { return cStatementStatementParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class IfElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.If");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIfKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cElseBlockKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cElseBlockAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cElseBlockBlockParserRuleCall_2_1_0 = (RuleCall)cElseBlockAssignment_2_1.eContents().get(0);
		private final Keyword cIfBlockKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cIfBlockAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cIfBlockBlockParserRuleCall_4_0 = (RuleCall)cIfBlockAssignment_4.eContents().get(0);
		private final Keyword cConditionKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cConditionAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConditionOpBoolParserRuleCall_6_0 = (RuleCall)cConditionAssignment_6.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		//If:
		//	'If'
		//	'{' ('elseBlock' elseBlock=Block)?
		//	'ifBlock' ifBlock=Block
		//	'condition' condition=OpBool
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'If' '{' ('elseBlock' elseBlock=Block)? 'ifBlock' ifBlock=Block 'condition' condition=OpBool '}'
		public Group getGroup() { return cGroup; }
		
		//'If'
		public Keyword getIfKeyword_0() { return cIfKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//('elseBlock' elseBlock=Block)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'elseBlock'
		public Keyword getElseBlockKeyword_2_0() { return cElseBlockKeyword_2_0; }
		
		//elseBlock=Block
		public Assignment getElseBlockAssignment_2_1() { return cElseBlockAssignment_2_1; }
		
		//Block
		public RuleCall getElseBlockBlockParserRuleCall_2_1_0() { return cElseBlockBlockParserRuleCall_2_1_0; }
		
		//'ifBlock'
		public Keyword getIfBlockKeyword_3() { return cIfBlockKeyword_3; }
		
		//ifBlock=Block
		public Assignment getIfBlockAssignment_4() { return cIfBlockAssignment_4; }
		
		//Block
		public RuleCall getIfBlockBlockParserRuleCall_4_0() { return cIfBlockBlockParserRuleCall_4_0; }
		
		//'condition'
		public Keyword getConditionKeyword_5() { return cConditionKeyword_5; }
		
		//condition=OpBool
		public Assignment getConditionAssignment_6() { return cConditionAssignment_6; }
		
		//OpBool
		public RuleCall getConditionOpBoolParserRuleCall_6_0() { return cConditionOpBoolParserRuleCall_6_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ConstElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Const");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cConstKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//Const:
		//	{Const}
		//	'Const';
		@Override public ParserRule getRule() { return rule; }
		
		//{Const} 'Const'
		public Group getGroup() { return cGroup; }
		
		//{Const}
		public Action getConstAction_0() { return cConstAction_0; }
		
		//'Const'
		public Keyword getConstKeyword_1() { return cConstKeyword_1; }
	}
	public class AffectationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Affectation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAffectationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cVariableKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cVariableAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cVariableVariableParserRuleCall_3_0 = (RuleCall)cVariableAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cOpDroiteKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cOpDroiteAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cOpDroiteExpressionParserRuleCall_4_1_0 = (RuleCall)cOpDroiteAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Affectation:
		//	'Affectation'
		//	'{'
		//	'variable' variable=Variable ('opDroite' opDroite=Expression)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Affectation' '{' 'variable' variable=Variable ('opDroite' opDroite=Expression)? '}'
		public Group getGroup() { return cGroup; }
		
		//'Affectation'
		public Keyword getAffectationKeyword_0() { return cAffectationKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'variable'
		public Keyword getVariableKeyword_2() { return cVariableKeyword_2; }
		
		//variable=Variable
		public Assignment getVariableAssignment_3() { return cVariableAssignment_3; }
		
		//Variable
		public RuleCall getVariableVariableParserRuleCall_3_0() { return cVariableVariableParserRuleCall_3_0; }
		
		//('opDroite' opDroite=Expression)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'opDroite'
		public Keyword getOpDroiteKeyword_4_0() { return cOpDroiteKeyword_4_0; }
		
		//opDroite=Expression
		public Assignment getOpDroiteAssignment_4_1() { return cOpDroiteAssignment_4_1; }
		
		//Expression
		public RuleCall getOpDroiteExpressionParserRuleCall_4_1_0() { return cOpDroiteExpressionParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class AndElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.And");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAndKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cExpressionGKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionGAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionGExpressionParserRuleCall_3_0 = (RuleCall)cExpressionGAssignment_3.eContents().get(0);
		private final Keyword cExpressionDKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpressionDAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpressionDExpressionParserRuleCall_5_0 = (RuleCall)cExpressionDAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//And:
		//	'And'
		//	'{'
		//	'expressionG' expressionG=Expression
		//	'expressionD' expressionD=Expression
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'And' '{' 'expressionG' expressionG=Expression 'expressionD' expressionD=Expression '}'
		public Group getGroup() { return cGroup; }
		
		//'And'
		public Keyword getAndKeyword_0() { return cAndKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'expressionG'
		public Keyword getExpressionGKeyword_2() { return cExpressionGKeyword_2; }
		
		//expressionG=Expression
		public Assignment getExpressionGAssignment_3() { return cExpressionGAssignment_3; }
		
		//Expression
		public RuleCall getExpressionGExpressionParserRuleCall_3_0() { return cExpressionGExpressionParserRuleCall_3_0; }
		
		//'expressionD'
		public Keyword getExpressionDKeyword_4() { return cExpressionDKeyword_4; }
		
		//expressionD=Expression
		public Assignment getExpressionDAssignment_5() { return cExpressionDAssignment_5; }
		
		//Expression
		public RuleCall getExpressionDExpressionParserRuleCall_5_0() { return cExpressionDExpressionParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class OrElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Or");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cOrKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cExpressionGKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionGAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionGExpressionParserRuleCall_3_0 = (RuleCall)cExpressionGAssignment_3.eContents().get(0);
		private final Keyword cExpressionDKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpressionDAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpressionDExpressionParserRuleCall_5_0 = (RuleCall)cExpressionDAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Or:
		//	'Or'
		//	'{'
		//	'expressionG' expressionG=Expression
		//	'expressionD' expressionD=Expression
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Or' '{' 'expressionG' expressionG=Expression 'expressionD' expressionD=Expression '}'
		public Group getGroup() { return cGroup; }
		
		//'Or'
		public Keyword getOrKeyword_0() { return cOrKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'expressionG'
		public Keyword getExpressionGKeyword_2() { return cExpressionGKeyword_2; }
		
		//expressionG=Expression
		public Assignment getExpressionGAssignment_3() { return cExpressionGAssignment_3; }
		
		//Expression
		public RuleCall getExpressionGExpressionParserRuleCall_3_0() { return cExpressionGExpressionParserRuleCall_3_0; }
		
		//'expressionD'
		public Keyword getExpressionDKeyword_4() { return cExpressionDKeyword_4; }
		
		//expressionD=Expression
		public Assignment getExpressionDAssignment_5() { return cExpressionDAssignment_5; }
		
		//Expression
		public RuleCall getExpressionDExpressionParserRuleCall_5_0() { return cExpressionDExpressionParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class XorElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Xor");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cXorKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cExpressionGKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionGAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionGExpressionParserRuleCall_3_0 = (RuleCall)cExpressionGAssignment_3.eContents().get(0);
		private final Keyword cExpressionDKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpressionDAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpressionDExpressionParserRuleCall_5_0 = (RuleCall)cExpressionDAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Xor:
		//	'Xor'
		//	'{'
		//	'expressionG' expressionG=Expression
		//	'expressionD' expressionD=Expression
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Xor' '{' 'expressionG' expressionG=Expression 'expressionD' expressionD=Expression '}'
		public Group getGroup() { return cGroup; }
		
		//'Xor'
		public Keyword getXorKeyword_0() { return cXorKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'expressionG'
		public Keyword getExpressionGKeyword_2() { return cExpressionGKeyword_2; }
		
		//expressionG=Expression
		public Assignment getExpressionGAssignment_3() { return cExpressionGAssignment_3; }
		
		//Expression
		public RuleCall getExpressionGExpressionParserRuleCall_3_0() { return cExpressionGExpressionParserRuleCall_3_0; }
		
		//'expressionD'
		public Keyword getExpressionDKeyword_4() { return cExpressionDKeyword_4; }
		
		//expressionD=Expression
		public Assignment getExpressionDAssignment_5() { return cExpressionDAssignment_5; }
		
		//Expression
		public RuleCall getExpressionDExpressionParserRuleCall_5_0() { return cExpressionDExpressionParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class Tweets_userElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.tweets_user");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTweets_userAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTweets_userKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//tweets_user:
		//	{tweets_user}
		//	'tweets_user'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{tweets_user} 'tweets_user' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{tweets_user}
		public Action getTweets_userAction_0() { return cTweets_userAction_0; }
		
		//'tweets_user'
		public Keyword getTweets_userKeyword_1() { return cTweets_userKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class Tweets_locationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.tweets_location");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTweets_locationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTweets_locationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//tweets_location:
		//	{tweets_location}
		//	'tweets_location'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{tweets_location} 'tweets_location' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{tweets_location}
		public Action getTweets_locationAction_0() { return cTweets_locationAction_0; }
		
		//'tweets_location'
		public Keyword getTweets_locationKeyword_1() { return cTweets_locationKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class Tweets_entityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.tweets_entity");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTweets_entityAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTweets_entityKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//tweets_entity:
		//	{tweets_entity}
		//	'tweets_entity'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{tweets_entity} 'tweets_entity' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{tweets_entity}
		public Action getTweets_entityAction_0() { return cTweets_entityAction_0; }
		
		//'tweets_entity'
		public Keyword getTweets_entityKeyword_1() { return cTweets_entityKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class Tweets_dateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.tweets_date");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTweets_dateAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cTweets_dateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//tweets_date:
		//	{tweets_date}
		//	'tweets_date'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{tweets_date} 'tweets_date' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{tweets_date}
		public Action getTweets_dateAction_0() { return cTweets_dateAction_0; }
		
		//'tweets_date'
		public Keyword getTweets_dateKeyword_1() { return cTweets_dateKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ProportionPositifElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.ProportionPositif");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProportionPositifAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProportionPositifKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ProportionPositif:
		//	{ProportionPositif}
		//	'ProportionPositif'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ProportionPositif} 'ProportionPositif' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{ProportionPositif}
		public Action getProportionPositifAction_0() { return cProportionPositifAction_0; }
		
		//'ProportionPositif'
		public Keyword getProportionPositifKeyword_1() { return cProportionPositifKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ProportionNegatifElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.ProportionNegatif");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cProportionNegatifAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cProportionNegatifKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ProportionNegatif:
		//	{ProportionNegatif}
		//	'ProportionNegatif'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ProportionNegatif} 'ProportionNegatif' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{ProportionNegatif}
		public Action getProportionNegatifAction_0() { return cProportionNegatifAction_0; }
		
		//'ProportionNegatif'
		public Keyword getProportionNegatifKeyword_1() { return cProportionNegatifKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CountTweetElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.countTweet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCountTweetAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCountTweetKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//countTweet:
		//	{countTweet}
		//	'countTweet'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{countTweet} 'countTweet' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{countTweet}
		public Action getCountTweetAction_0() { return cCountTweetAction_0; }
		
		//'countTweet'
		public Keyword getCountTweetKeyword_1() { return cCountTweetKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CountVisitProfilElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.countVisitProfil");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCountVisitProfilAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCountVisitProfilKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//countVisitProfil:
		//	{countVisitProfil}
		//	'countVisitProfil'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{countVisitProfil} 'countVisitProfil' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{countVisitProfil}
		public Action getCountVisitProfilAction_0() { return cCountVisitProfilAction_0; }
		
		//'countVisitProfil'
		public Keyword getCountVisitProfilKeyword_1() { return cCountVisitProfilKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class CroissanceAbonneElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.CroissanceAbonne");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCroissanceAbonneAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cCroissanceAbonneKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//CroissanceAbonne:
		//	{CroissanceAbonne}
		//	'CroissanceAbonne'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{CroissanceAbonne} 'CroissanceAbonne' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{CroissanceAbonne}
		public Action getCroissanceAbonneAction_0() { return cCroissanceAbonneAction_0; }
		
		//'CroissanceAbonne'
		public Keyword getCroissanceAbonneKeyword_1() { return cCroissanceAbonneKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class MoyFollowersElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.moyFollowers");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMoyFollowersAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMoyFollowersKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//moyFollowers:
		//	{moyFollowers}
		//	'moyFollowers'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{moyFollowers} 'moyFollowers' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{moyFollowers}
		public Action getMoyFollowersAction_0() { return cMoyFollowersAction_0; }
		
		//'moyFollowers'
		public Keyword getMoyFollowersKeyword_1() { return cMoyFollowersKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class MoyFavoritedElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.moyFavorited");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMoyFavoritedAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cMoyFavoritedKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cArgsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cArgsArgsParserRuleCall_3_2_0 = (RuleCall)cArgsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cArgsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cArgsArgsParserRuleCall_3_3_1_0 = (RuleCall)cArgsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//moyFavorited:
		//	{moyFavorited}
		//	'moyFavorited'
		//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{moyFavorited} 'moyFavorited' '{' ('args' '{' args+=Args ("," args+=Args)* '}')? '}'
		public Group getGroup() { return cGroup; }
		
		//{moyFavorited}
		public Action getMoyFavoritedAction_0() { return cMoyFavoritedAction_0; }
		
		//'moyFavorited'
		public Keyword getMoyFavoritedKeyword_1() { return cMoyFavoritedKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('args' '{' args+=Args ("," args+=Args)* '}')?
		public Group getGroup_3() { return cGroup_3; }
		
		//'args'
		public Keyword getArgsKeyword_3_0() { return cArgsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_2() { return cArgsAssignment_3_2; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_2_0() { return cArgsArgsParserRuleCall_3_2_0; }
		
		//("," args+=Args)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//args+=Args
		public Assignment getArgsAssignment_3_3_1() { return cArgsAssignment_3_3_1; }
		
		//Args
		public RuleCall getArgsArgsParserRuleCall_3_3_1_0() { return cArgsArgsParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class GreaterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Greater");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cGreaterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cExpressionGKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionGAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionGExpressionParserRuleCall_3_0 = (RuleCall)cExpressionGAssignment_3.eContents().get(0);
		private final Keyword cExpressionDKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpressionDAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpressionDExpressionParserRuleCall_5_0 = (RuleCall)cExpressionDAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Greater:
		//	'Greater'
		//	'{'
		//	'expressionG' expressionG=Expression
		//	'expressionD' expressionD=Expression
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Greater' '{' 'expressionG' expressionG=Expression 'expressionD' expressionD=Expression '}'
		public Group getGroup() { return cGroup; }
		
		//'Greater'
		public Keyword getGreaterKeyword_0() { return cGreaterKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'expressionG'
		public Keyword getExpressionGKeyword_2() { return cExpressionGKeyword_2; }
		
		//expressionG=Expression
		public Assignment getExpressionGAssignment_3() { return cExpressionGAssignment_3; }
		
		//Expression
		public RuleCall getExpressionGExpressionParserRuleCall_3_0() { return cExpressionGExpressionParserRuleCall_3_0; }
		
		//'expressionD'
		public Keyword getExpressionDKeyword_4() { return cExpressionDKeyword_4; }
		
		//expressionD=Expression
		public Assignment getExpressionDAssignment_5() { return cExpressionDAssignment_5; }
		
		//Expression
		public RuleCall getExpressionDExpressionParserRuleCall_5_0() { return cExpressionDExpressionParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class LessElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Less");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLessKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cExpressionGKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionGAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionGExpressionParserRuleCall_3_0 = (RuleCall)cExpressionGAssignment_3.eContents().get(0);
		private final Keyword cExpressionDKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpressionDAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpressionDExpressionParserRuleCall_5_0 = (RuleCall)cExpressionDAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Less:
		//	'Less'
		//	'{'
		//	'expressionG' expressionG=Expression
		//	'expressionD' expressionD=Expression
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Less' '{' 'expressionG' expressionG=Expression 'expressionD' expressionD=Expression '}'
		public Group getGroup() { return cGroup; }
		
		//'Less'
		public Keyword getLessKeyword_0() { return cLessKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'expressionG'
		public Keyword getExpressionGKeyword_2() { return cExpressionGKeyword_2; }
		
		//expressionG=Expression
		public Assignment getExpressionGAssignment_3() { return cExpressionGAssignment_3; }
		
		//Expression
		public RuleCall getExpressionGExpressionParserRuleCall_3_0() { return cExpressionGExpressionParserRuleCall_3_0; }
		
		//'expressionD'
		public Keyword getExpressionDKeyword_4() { return cExpressionDKeyword_4; }
		
		//expressionD=Expression
		public Assignment getExpressionDAssignment_5() { return cExpressionDAssignment_5; }
		
		//Expression
		public RuleCall getExpressionDExpressionParserRuleCall_5_0() { return cExpressionDExpressionParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class EqualElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Equal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cEqualKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cExpressionGKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionGAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionGExpressionParserRuleCall_3_0 = (RuleCall)cExpressionGAssignment_3.eContents().get(0);
		private final Keyword cExpressionDKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpressionDAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpressionDExpressionParserRuleCall_5_0 = (RuleCall)cExpressionDAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Equal:
		//	'Equal'
		//	'{'
		//	'expressionG' expressionG=Expression
		//	'expressionD' expressionD=Expression
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Equal' '{' 'expressionG' expressionG=Expression 'expressionD' expressionD=Expression '}'
		public Group getGroup() { return cGroup; }
		
		//'Equal'
		public Keyword getEqualKeyword_0() { return cEqualKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'expressionG'
		public Keyword getExpressionGKeyword_2() { return cExpressionGKeyword_2; }
		
		//expressionG=Expression
		public Assignment getExpressionGAssignment_3() { return cExpressionGAssignment_3; }
		
		//Expression
		public RuleCall getExpressionGExpressionParserRuleCall_3_0() { return cExpressionGExpressionParserRuleCall_3_0; }
		
		//'expressionD'
		public Keyword getExpressionDKeyword_4() { return cExpressionDKeyword_4; }
		
		//expressionD=Expression
		public Assignment getExpressionDAssignment_5() { return cExpressionDAssignment_5; }
		
		//Expression
		public RuleCall getExpressionDExpressionParserRuleCall_5_0() { return cExpressionDExpressionParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class SupEgalElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.SupEgal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSupEgalKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cExpressionGKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionGAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionGExpressionParserRuleCall_3_0 = (RuleCall)cExpressionGAssignment_3.eContents().get(0);
		private final Keyword cExpressionDKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cExpressionDAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cExpressionDExpressionParserRuleCall_5_0 = (RuleCall)cExpressionDAssignment_5.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//SupEgal:
		//	'SupEgal'
		//	'{'
		//	'expressionG' expressionG=Expression
		//	'expressionD' expressionD=Expression
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//'SupEgal' '{' 'expressionG' expressionG=Expression 'expressionD' expressionD=Expression '}'
		public Group getGroup() { return cGroup; }
		
		//'SupEgal'
		public Keyword getSupEgalKeyword_0() { return cSupEgalKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'expressionG'
		public Keyword getExpressionGKeyword_2() { return cExpressionGKeyword_2; }
		
		//expressionG=Expression
		public Assignment getExpressionGAssignment_3() { return cExpressionGAssignment_3; }
		
		//Expression
		public RuleCall getExpressionGExpressionParserRuleCall_3_0() { return cExpressionGExpressionParserRuleCall_3_0; }
		
		//'expressionD'
		public Keyword getExpressionDKeyword_4() { return cExpressionDKeyword_4; }
		
		//expressionD=Expression
		public Assignment getExpressionDAssignment_5() { return cExpressionDAssignment_5; }
		
		//Expression
		public RuleCall getExpressionDExpressionParserRuleCall_5_0() { return cExpressionDExpressionParserRuleCall_5_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_6() { return cRightCurlyBracketKeyword_6; }
	}
	public class ArgsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Args");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cArgsAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cArgsKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cArgKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cArgAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cArgString0ParserRuleCall_3_1_0 = (RuleCall)cArgAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Args:
		//	{Args}
		//	'Args'
		//	'{' ('arg' arg=String0)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Args} 'Args' '{' ('arg' arg=String0)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Args}
		public Action getArgsAction_0() { return cArgsAction_0; }
		
		//'Args'
		public Keyword getArgsKeyword_1() { return cArgsKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('arg' arg=String0)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'arg'
		public Keyword getArgKeyword_3_0() { return cArgKeyword_3_0; }
		
		//arg=String0
		public Assignment getArgAssignment_3_1() { return cArgAssignment_3_1; }
		
		//String0
		public RuleCall getArgString0ParserRuleCall_3_1_0() { return cArgString0ParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class String0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.String0");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//String0:
		//	STRING / * TODO: implement this rule and an appropriate IValueConverter * /;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}
	public class VariableElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "esir3.im.Tw.Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cVariableAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cVariableKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cNameVariableKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cNameVariableAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cNameVariableString0ParserRuleCall_3_1_0 = (RuleCall)cNameVariableAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//Variable:
		//	{Variable}
		//	'Variable'
		//	'{' ('nameVariable' nameVariable=String0)?
		//	'}';
		@Override public ParserRule getRule() { return rule; }
		
		//{Variable} 'Variable' '{' ('nameVariable' nameVariable=String0)? '}'
		public Group getGroup() { return cGroup; }
		
		//{Variable}
		public Action getVariableAction_0() { return cVariableAction_0; }
		
		//'Variable'
		public Keyword getVariableKeyword_1() { return cVariableKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('nameVariable' nameVariable=String0)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'nameVariable'
		public Keyword getNameVariableKeyword_3_0() { return cNameVariableKeyword_3_0; }
		
		//nameVariable=String0
		public Assignment getNameVariableAssignment_3_1() { return cNameVariableAssignment_3_1; }
		
		//String0
		public RuleCall getNameVariableString0ParserRuleCall_3_1_0() { return cNameVariableString0ParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	
	
	private final ProgramElements pProgram;
	private final StatementElements pStatement;
	private final OpBoolElements pOpBool;
	private final ExpressionElements pExpression;
	private final BlockElements pBlock;
	private final IfElements pIf;
	private final ConstElements pConst;
	private final AffectationElements pAffectation;
	private final AndElements pAnd;
	private final OrElements pOr;
	private final XorElements pXor;
	private final Tweets_userElements pTweets_user;
	private final Tweets_locationElements pTweets_location;
	private final Tweets_entityElements pTweets_entity;
	private final Tweets_dateElements pTweets_date;
	private final ProportionPositifElements pProportionPositif;
	private final ProportionNegatifElements pProportionNegatif;
	private final CountTweetElements pCountTweet;
	private final CountVisitProfilElements pCountVisitProfil;
	private final CroissanceAbonneElements pCroissanceAbonne;
	private final MoyFollowersElements pMoyFollowers;
	private final MoyFavoritedElements pMoyFavorited;
	private final GreaterElements pGreater;
	private final LessElements pLess;
	private final EqualElements pEqual;
	private final SupEgalElements pSupEgal;
	private final ArgsElements pArgs;
	private final String0Elements pString0;
	private final VariableElements pVariable;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public TwGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pProgram = new ProgramElements();
		this.pStatement = new StatementElements();
		this.pOpBool = new OpBoolElements();
		this.pExpression = new ExpressionElements();
		this.pBlock = new BlockElements();
		this.pIf = new IfElements();
		this.pConst = new ConstElements();
		this.pAffectation = new AffectationElements();
		this.pAnd = new AndElements();
		this.pOr = new OrElements();
		this.pXor = new XorElements();
		this.pTweets_user = new Tweets_userElements();
		this.pTweets_location = new Tweets_locationElements();
		this.pTweets_entity = new Tweets_entityElements();
		this.pTweets_date = new Tweets_dateElements();
		this.pProportionPositif = new ProportionPositifElements();
		this.pProportionNegatif = new ProportionNegatifElements();
		this.pCountTweet = new CountTweetElements();
		this.pCountVisitProfil = new CountVisitProfilElements();
		this.pCroissanceAbonne = new CroissanceAbonneElements();
		this.pMoyFollowers = new MoyFollowersElements();
		this.pMoyFavorited = new MoyFavoritedElements();
		this.pGreater = new GreaterElements();
		this.pLess = new LessElements();
		this.pEqual = new EqualElements();
		this.pSupEgal = new SupEgalElements();
		this.pArgs = new ArgsElements();
		this.pString0 = new String0Elements();
		this.pVariable = new VariableElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("esir3.im.Tw".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Program:
	//	{Program}
	//	'Program'
	//	'{' ('statement' '{' statement+=Statement ("," statement+=Statement)* '}')?
	//	'}';
	public ProgramElements getProgramAccess() {
		return pProgram;
	}
	
	public ParserRule getProgramRule() {
		return getProgramAccess().getRule();
	}
	
	//Statement:
	//	Block | If | Const | Affectation | And | Or | Xor | tweets_user | tweets_location | tweets_entity | tweets_date |
	//	ProportionPositif | ProportionNegatif | countTweet | countVisitProfil | CroissanceAbonne | moyFollowers |
	//	moyFavorited | Greater | Less | Equal | SupEgal;
	public StatementElements getStatementAccess() {
		return pStatement;
	}
	
	public ParserRule getStatementRule() {
		return getStatementAccess().getRule();
	}
	
	//OpBool:
	//	And | Or | Xor | Greater | Less | Equal | SupEgal;
	public OpBoolElements getOpBoolAccess() {
		return pOpBool;
	}
	
	public ParserRule getOpBoolRule() {
		return getOpBoolAccess().getRule();
	}
	
	//Expression:
	//	Const | Affectation | And | Or | Xor | tweets_user | tweets_location | tweets_entity | tweets_date |
	//	ProportionPositif | ProportionNegatif | countTweet | countVisitProfil | CroissanceAbonne | moyFollowers |
	//	moyFavorited | Greater | Less | Equal | SupEgal;
	public ExpressionElements getExpressionAccess() {
		return pExpression;
	}
	
	public ParserRule getExpressionRule() {
		return getExpressionAccess().getRule();
	}
	
	//Block:
	//	{Block}
	//	'Block'
	//	'{' ('statement' '{' statement+=Statement ("," statement+=Statement)* '}')?
	//	'}';
	public BlockElements getBlockAccess() {
		return pBlock;
	}
	
	public ParserRule getBlockRule() {
		return getBlockAccess().getRule();
	}
	
	//If:
	//	'If'
	//	'{' ('elseBlock' elseBlock=Block)?
	//	'ifBlock' ifBlock=Block
	//	'condition' condition=OpBool
	//	'}';
	public IfElements getIfAccess() {
		return pIf;
	}
	
	public ParserRule getIfRule() {
		return getIfAccess().getRule();
	}
	
	//Const:
	//	{Const}
	//	'Const';
	public ConstElements getConstAccess() {
		return pConst;
	}
	
	public ParserRule getConstRule() {
		return getConstAccess().getRule();
	}
	
	//Affectation:
	//	'Affectation'
	//	'{'
	//	'variable' variable=Variable ('opDroite' opDroite=Expression)?
	//	'}';
	public AffectationElements getAffectationAccess() {
		return pAffectation;
	}
	
	public ParserRule getAffectationRule() {
		return getAffectationAccess().getRule();
	}
	
	//And:
	//	'And'
	//	'{'
	//	'expressionG' expressionG=Expression
	//	'expressionD' expressionD=Expression
	//	'}';
	public AndElements getAndAccess() {
		return pAnd;
	}
	
	public ParserRule getAndRule() {
		return getAndAccess().getRule();
	}
	
	//Or:
	//	'Or'
	//	'{'
	//	'expressionG' expressionG=Expression
	//	'expressionD' expressionD=Expression
	//	'}';
	public OrElements getOrAccess() {
		return pOr;
	}
	
	public ParserRule getOrRule() {
		return getOrAccess().getRule();
	}
	
	//Xor:
	//	'Xor'
	//	'{'
	//	'expressionG' expressionG=Expression
	//	'expressionD' expressionD=Expression
	//	'}';
	public XorElements getXorAccess() {
		return pXor;
	}
	
	public ParserRule getXorRule() {
		return getXorAccess().getRule();
	}
	
	//tweets_user:
	//	{tweets_user}
	//	'tweets_user'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public Tweets_userElements getTweets_userAccess() {
		return pTweets_user;
	}
	
	public ParserRule getTweets_userRule() {
		return getTweets_userAccess().getRule();
	}
	
	//tweets_location:
	//	{tweets_location}
	//	'tweets_location'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public Tweets_locationElements getTweets_locationAccess() {
		return pTweets_location;
	}
	
	public ParserRule getTweets_locationRule() {
		return getTweets_locationAccess().getRule();
	}
	
	//tweets_entity:
	//	{tweets_entity}
	//	'tweets_entity'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public Tweets_entityElements getTweets_entityAccess() {
		return pTweets_entity;
	}
	
	public ParserRule getTweets_entityRule() {
		return getTweets_entityAccess().getRule();
	}
	
	//tweets_date:
	//	{tweets_date}
	//	'tweets_date'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public Tweets_dateElements getTweets_dateAccess() {
		return pTweets_date;
	}
	
	public ParserRule getTweets_dateRule() {
		return getTweets_dateAccess().getRule();
	}
	
	//ProportionPositif:
	//	{ProportionPositif}
	//	'ProportionPositif'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public ProportionPositifElements getProportionPositifAccess() {
		return pProportionPositif;
	}
	
	public ParserRule getProportionPositifRule() {
		return getProportionPositifAccess().getRule();
	}
	
	//ProportionNegatif:
	//	{ProportionNegatif}
	//	'ProportionNegatif'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public ProportionNegatifElements getProportionNegatifAccess() {
		return pProportionNegatif;
	}
	
	public ParserRule getProportionNegatifRule() {
		return getProportionNegatifAccess().getRule();
	}
	
	//countTweet:
	//	{countTweet}
	//	'countTweet'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public CountTweetElements getCountTweetAccess() {
		return pCountTweet;
	}
	
	public ParserRule getCountTweetRule() {
		return getCountTweetAccess().getRule();
	}
	
	//countVisitProfil:
	//	{countVisitProfil}
	//	'countVisitProfil'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public CountVisitProfilElements getCountVisitProfilAccess() {
		return pCountVisitProfil;
	}
	
	public ParserRule getCountVisitProfilRule() {
		return getCountVisitProfilAccess().getRule();
	}
	
	//CroissanceAbonne:
	//	{CroissanceAbonne}
	//	'CroissanceAbonne'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public CroissanceAbonneElements getCroissanceAbonneAccess() {
		return pCroissanceAbonne;
	}
	
	public ParserRule getCroissanceAbonneRule() {
		return getCroissanceAbonneAccess().getRule();
	}
	
	//moyFollowers:
	//	{moyFollowers}
	//	'moyFollowers'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public MoyFollowersElements getMoyFollowersAccess() {
		return pMoyFollowers;
	}
	
	public ParserRule getMoyFollowersRule() {
		return getMoyFollowersAccess().getRule();
	}
	
	//moyFavorited:
	//	{moyFavorited}
	//	'moyFavorited'
	//	'{' ('args' '{' args+=Args ("," args+=Args)* '}')?
	//	'}';
	public MoyFavoritedElements getMoyFavoritedAccess() {
		return pMoyFavorited;
	}
	
	public ParserRule getMoyFavoritedRule() {
		return getMoyFavoritedAccess().getRule();
	}
	
	//Greater:
	//	'Greater'
	//	'{'
	//	'expressionG' expressionG=Expression
	//	'expressionD' expressionD=Expression
	//	'}';
	public GreaterElements getGreaterAccess() {
		return pGreater;
	}
	
	public ParserRule getGreaterRule() {
		return getGreaterAccess().getRule();
	}
	
	//Less:
	//	'Less'
	//	'{'
	//	'expressionG' expressionG=Expression
	//	'expressionD' expressionD=Expression
	//	'}';
	public LessElements getLessAccess() {
		return pLess;
	}
	
	public ParserRule getLessRule() {
		return getLessAccess().getRule();
	}
	
	//Equal:
	//	'Equal'
	//	'{'
	//	'expressionG' expressionG=Expression
	//	'expressionD' expressionD=Expression
	//	'}';
	public EqualElements getEqualAccess() {
		return pEqual;
	}
	
	public ParserRule getEqualRule() {
		return getEqualAccess().getRule();
	}
	
	//SupEgal:
	//	'SupEgal'
	//	'{'
	//	'expressionG' expressionG=Expression
	//	'expressionD' expressionD=Expression
	//	'}';
	public SupEgalElements getSupEgalAccess() {
		return pSupEgal;
	}
	
	public ParserRule getSupEgalRule() {
		return getSupEgalAccess().getRule();
	}
	
	//Args:
	//	{Args}
	//	'Args'
	//	'{' ('arg' arg=String0)?
	//	'}';
	public ArgsElements getArgsAccess() {
		return pArgs;
	}
	
	public ParserRule getArgsRule() {
		return getArgsAccess().getRule();
	}
	
	//String0:
	//	STRING / * TODO: implement this rule and an appropriate IValueConverter * /;
	public String0Elements getString0Access() {
		return pString0;
	}
	
	public ParserRule getString0Rule() {
		return getString0Access().getRule();
	}
	
	//Variable:
	//	{Variable}
	//	'Variable'
	//	'{' ('nameVariable' nameVariable=String0)?
	//	'}';
	public VariableElements getVariableAccess() {
		return pVariable;
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' | "'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/ *'->'* /';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
